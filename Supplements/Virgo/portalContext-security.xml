<!--
  #%L
  This file is part of "Apromore Core".
  %%
  Copyright (C) 2018 - 2020 Apromore Pty Ltd.
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Lesser Public License for more details.

  You should have received a copy of the GNU General Lesser Public
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/lgpl-3.0.html>.
  #L%
  -->


<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- Enable auto-wiring -->
    <context:annotation-config/>
    <context:component-scan base-package="org.springframework.security.saml"/>

    <beans:bean id="loginPageFilter" class="org.apromore.portal.security.LoginRedirectKeycloakFilter">
        <beans:property name="fullProtocolHostPortUrl" value="${site.fullProtocolHostPortUrl}"/>
        <beans:property name="useKeycloakSso" value="${site.useKeycloakSso}"/>
    </beans:bean>

    <!--
            <beans:property name="fullProtocolHostPortUrl" value="${site.fullProtocolHostPortUrl}"/>
        <beans:property name="useKeycloakSso" value="${site.useKeycloakSso}"/>
        -->

    <!-- Setup for the Servlets used in new user regisration and reset password.
    <beans:bean id="resetPassword" class="org.apromore.portal.servlet.ResetPasswordHttpServletRequestHandler" />
    <beans:bean id="newUserRegistration" class="org.apromore.portal.servlet.NewUserRegistrationHttpServletRequestHandler" />
    <http pattern="/register/**" security="none"/>
    -->

    <!-- Http Security Setup -->
    <http pattern="/css/**" security="none"/>
    <http pattern="/font/**" security="none"/>
    <http pattern="/img/**" security="none"/>
    <http pattern="/themes/**" security="none"/>
    <http pattern="/libs/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/robots.txt" security="none"/>
    <http pattern="/zkau/**" security="none"/>

    <http auto-config="false" access-denied-page="/denied.zul" use-expressions="true"
          entry-point-ref="apromoreAuthenticationEntryPoint" authentication-manager-ref="authenticationManager">
        <intercept-url pattern="/login.zul*" access="permitAll" requires-channel="any"/>
        <intercept-url pattern="/tokenHandoff.zul*" access="permitAll" requires-channel="any"/>

        <intercept-url pattern="/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" requires-channel="any"/>

        <logout logout-url="/j_spring_security_logout" logout-success-url="/login.zul" delete-cookies="Apromore"/>

        <custom-filter position="FORM_LOGIN_FILTER" ref="apromoreUsernamePasswordAuthenticationFilter"/>

        <custom-filter before="FIRST" ref="loginKeycloakFilter" />

        <!--
        <custom-filter before="FIRST" ref="metadataGeneratorFilter"/>
        <custom-filter after="BASIC_AUTH_FILTER" ref="samlFilter"/>
        -->

        <!-- <custom-filter before="BASIC_AUTH_FILTER" ref="ssoApprovedFilter"/> -->

        <session-management session-fixation-protection="newSession"/>
        <remember-me services-ref="rememberMeServices"/>
    </http>


    <!-- The remote authentication details -->
    <authentication-manager id="authenticationManager">
        <!-- <authentication-provider ref="jaasAuthenticationProvider"/> -->
        <authentication-provider ref="usernamePasswordAuthenticationProvider"/>
        <!-- <authentication-provider ref="remoteAuthenticationProvider"/> -->
        <authentication-provider ref="rememberMeAuthenticationProvider"/>
    </authentication-manager>

    <!-- Uncommenting this bean and adding it to #authenticationManager (above) will enable LDAP logins.
         You will also need to create etc/login.conf; see the README.md for an example.
         See https://docs.spring.io/spring-security/site/docs/3.1.x/reference/jaas.html
    <beans:bean id="jaasAuthenticationProvider" class="org.springframework.security.authentication.jaas.JaasAuthenticationProvider">
        <beans:property name="loginConfig" value="file:etc/login.conf"/>
        <beans:property name="loginContextName" value="apromore"/>
        <beans:property name="callbackHandlers">
            <beans:list>
                <beans:bean class="org.springframework.security.authentication.jaas.JaasNameCallbackHandler"/>
                <beans:bean class="org.springframework.security.authentication.jaas.JaasPasswordCallbackHandler"/>
            </beans:list>
        </beans:property>
        <beans:property name="authorityGranters">
            <beans:list>
                <beans:bean class="org.apromore.security.AuthorityGranterImpl">
                    <beans:property name="principalClassName" value="com.sun.security.auth.UserPrincipal"/>
                    <beans:property name="grants">
                        <beans:set>
                            <beans:value>ROLE_USER</beans:value>
                        </beans:set>
                    </beans:property>
                </beans:bean>
            </beans:list>
        </beans:property>
    </beans:bean>
    -->

    <beans:bean id="loginKeycloakFilter" class="org.apromore.portal.security.LoginRedirectKeycloakFilter">
        <beans:property name="keycloakLoginFormUrl"
                        value="https://${site.securitymshost}:${site.securitymsport}/sso/initiateLogin?fullReturnPath=&lt;full_return_path&gt;" />
        <beans:property name="fullProtocolHostPortUrl" value="${site.fullProtocolHostPortUrl}"/>
        <beans:property name="useKeycloakSso" value="false"/>
    </beans:bean>

    <beans:bean id="remoteAuthenticationProvider" class="org.apromore.security.provider.ApromoreRemoteAuthenticationProvider">
        <beans:property name="remoteAuthenticationManager" ref="remoteAuthenticationManager"/>
    </beans:bean>

    <beans:bean id="remoteAuthenticationManager" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
        <beans:property name="serviceUrl" value="http://${site.host}:${site.port}/${site.manager}/remoting/remoteAuth"/>
        <beans:property name="serviceInterface" value="org.apromore.security.ApromoreRemoteAuthenticationManager"/>
        <beans:property name="httpInvokerRequestExecutor" ref="httpInvokerRequestExecutor"/>
    </beans:bean>

    <beans:bean id="remoteUserDetailsService" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
        <beans:property name="serviceUrl" value="http://${site.host}:${site.port}/${site.manager}/remoting/remoteUserDetails"/>
        <beans:property name="serviceInterface" value="org.springframework.security.core.userdetails.UserDetailsService"/>
        <beans:property name="httpInvokerRequestExecutor" ref="httpInvokerRequestExecutor"/>
    </beans:bean>

    <beans:bean id="httpInvokerRequestExecutor" class="org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor"/>


    <!-- Custom Filters for Apromore -->
    <beans:bean id="apromoreAuthenticationEntryPoint" class="org.apromore.portal.security.KeycloakLoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl"
                        value="/login.zul" />
        <beans:property name="keycloakLoginFormUrl"
                        value="https://${site.securitymshost}:${site.securitymsport}/sso/initiateLogin?fullReturnPath=&lt;full_return_path&gt;" />
        <beans:property name="fullProtocolHostPortUrl" value="${site.fullProtocolHostPortUrl}" />
        <beans:property name="useKeycloakSso" value="false" />
    </beans:bean>

    <beans:bean id="apromoreUsernamePasswordAuthenticationFilter" class="org.apromore.security.filter.ApromoreUsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationFailureHandler" ref="failureHandler"/>
        <beans:property name="authenticationSuccessHandler" ref="successHandler"/>
        <beans:property name="rememberMeServices" ref="rememberMeServices" />
    </beans:bean>

    <beans:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/index.zul"/>
    </beans:bean>

    <beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/login.zul?error=1"/>
    </beans:bean>


    <!-- Custom Rememberme service -->
    <beans:bean id="rememberMeServices" class="org.apromore.security.provider.ApromoreTokenBasedRememberMeServices">
        <beans:property name="userDetailsService" ref="remoteUserDetailsService" />
        <beans:property name="tokenValiditySeconds" value="864000"/>
        <beans:property name="cookieName" value="Apromore"/>
        <beans:property name="key" value="ApromorePortal"/>
    </beans:bean>

    <beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <beans:property name="key" value="ApromorePortal" />
    </beans:bean>

</beans:beans>